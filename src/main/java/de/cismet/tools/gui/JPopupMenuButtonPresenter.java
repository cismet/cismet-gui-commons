/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.tools.gui;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.UIManager;
import javax.swing.event.PopupMenuEvent;
import javax.swing.event.PopupMenuListener;

/**
 * DOCUMENT ME!
 *
 * @author   thorsten.hell@cismet.de
 * @version  $Revision$, $Date$
 */
public class JPopupMenuButtonPresenter extends javax.swing.JApplet {

    //~ Instance fields --------------------------------------------------------

    private JPopupMenuButton mb;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkEnabled;
    private javax.swing.JToolBar toolbar;
    // End of variables declaration//GEN-END:variables

    //~ Methods ----------------------------------------------------------------

    /**
     * Initializes the applet JPopupMenuButtonPresenter.
     */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                    @Override
                    public void run() {
                        try {
                            // UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()) ;
                        } catch (Exception e) {
                        }
                        initComponents();

                        mb = new JPopupMenuButton();
                        mb.setIcon(
                            new javax.swing.ImageIcon(getClass().getResource("/de/cismet/tools/gui/res/demo.png"))); // NOI18N
                        mb.setEnabled(true);
                        final JPopupMenu popupMenu = new javax.swing.JPopupMenu();
                        popupMenu.add(new JMenuItem("Print", 'P'));                                                  // NOI18N
                        popupMenu.add(new JMenuItem("Preview", 'v'));                                                // NOI18N
                        popupMenu.add(new JMenuItem("Properties", 't'));                                             // NOI18N
                        popupMenu.addPopupMenuListener(new PopupMenuListener() {

                                @Override
                                public void popupMenuCanceled(final PopupMenuEvent e) {
                                }
                                @Override
                                public void popupMenuWillBecomeInvisible(final PopupMenuEvent e) {
                                }
                                @Override
                                public void popupMenuWillBecomeVisible(final PopupMenuEvent e) {
                                    System.out.println("XXXXXX"); // NOI18N
                                }
                            });
                        mb.setPopupMenu(popupMenu);
                        toolbar.add(mb);
                        toolbar.add(chkEnabled);
                    }
                });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        chkEnabled = new javax.swing.JCheckBox();
        toolbar = new javax.swing.JToolBar();

        chkEnabled.setSelected(true);
        chkEnabled.setText(org.openide.util.NbBundle.getMessage(
                JPopupMenuButtonPresenter.class,
                "JPopupMenuButtonPresenter.chkEnabled.text")); // NOI18N
        chkEnabled.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    chkEnabledActionPerformed(evt);
                }
            });

        getContentPane().add(toolbar, java.awt.BorderLayout.NORTH);
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void chkEnabledActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_chkEnabledActionPerformed
        mb.setEnabled(chkEnabled.isSelected());
    }                                                                              //GEN-LAST:event_chkEnabledActionPerformed
}
