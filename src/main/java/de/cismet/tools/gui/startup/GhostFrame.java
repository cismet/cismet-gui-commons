/*
 *  Copyright (C) 2011 thorsten
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * GhostFrame.java
 *
 * Created on 22.02.2011, 08:59:43
 */
package de.cismet.tools.gui.startup;

import de.cismet.tools.gui.Static2DTools;
import de.cismet.tools.gui.log4jquickconfig.Log4JQuickConfig;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JPanel;
import org.jdesktop.swingx.JXBusyLabel;

/**
 *
 * @author thorsten
 */
public class GhostFrame extends javax.swing.JFrame {

    /** Creates new form GhostFrame */
    public GhostFrame(String file, String title) throws Exception {
        initComponents();
        final File boundsFile = new File(file + ".bounds");
        Rectangle rectangle = null;
        setDefaultCloseOperation(JDialog.EXIT_ON_CLOSE);
        final BufferedReader reader = new BufferedReader(new FileReader(boundsFile));
        final String x = reader.readLine();
        final String y = reader.readLine();
        final String width = reader.readLine();
        final String height = reader.readLine();
        reader.close();
        rectangle = new Rectangle();
        rectangle.setBounds(Integer.parseInt(x),
                Integer.parseInt(y),
                Integer.parseInt(width),
                Integer.parseInt(height));
        final ImageIcon ii = new ImageIcon(file + ".png");
        final ImageIcon iii = new ImageIcon(Static2DTools.removeUnusedBorder(ii.getImage(), 0, 1));
        JPanel p = new JPanel(new BorderLayout()) {

            @Override
            public void paint(final Graphics g) {


                super.paint(g);

            }

            @Override
            protected void paintChildren(Graphics g) {
                g.drawImage(iii.getImage(), 0, 0, null);
                super.paintChildren(g);
            }
        };

        getContentPane().add(p, BorderLayout.CENTER);
        if (rectangle != null) {
            setBounds(rectangle);
        }

        JXBusyLabel busy = new JXBusyLabel(new Dimension(100, 100));
        busy.setDelay(100);
        busy.setOpaque(false);
        busy.setBusy(true);
        busy.setHorizontalAlignment(busy.CENTER);

        p.add(busy, BorderLayout.CENTER);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        Log4JQuickConfig.configure4LumbermillOnLocalhost();
        new GhostFrame("/Users/thorsten/.verdis/verdis.screen", "xxx").setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
